"""
M√≥dulo para actualizar el dashboard din√°micamente desde cualquier parte de la aplicaci√≥n
"""
import asyncio

# Variable global para almacenar la funci√≥n de actualizaci√≥n
_funcion_actualizacion = None
_page_ref = None

def registrar_actualizador(funcion_actualizacion, page):
    """Registra la funci√≥n de actualizaci√≥n del dashboard"""
    global _funcion_actualizacion, _page_ref
    _funcion_actualizacion = funcion_actualizacion
    _page_ref = page
    print("üîÑ Actualizador del dashboard registrado")

async def actualizar_dashboard():
    """Actualiza el dashboard si hay una funci√≥n registrada"""
    global _funcion_actualizacion, _page_ref
    if _funcion_actualizacion and _page_ref:
        try:
            # Pasar la funci√≥n corrutina, no el resultado de ejecutarla
            print("üîÑ Ejecutando actualizaci√≥n del dashboard...")
            _page_ref.run_task(_funcion_actualizacion)
        except Exception as e:
            print(f"‚ùå Error al actualizar dashboard: {e}")
            import traceback
            traceback.print_exc()
    else:
        print("‚ö†Ô∏è No hay funci√≥n de actualizaci√≥n registrada")

def actualizar_dashboard_sincrono():
    """Versi√≥n s√≠ncrona para contextos no-async - Simplificada"""
    try:
        print("üîÑ Solicitud de actualizaci√≥n s√≠ncrona...")
        actualizar_dashboard()
    except Exception as e:
        print(f"‚ùå Error en actualizaci√≥n s√≠ncrona: {e}")
